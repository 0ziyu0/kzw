package com.kzw.portal.controller;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.kzw.common.pojo.KZWResult;
import com.kzw.common.util.RedisUtil;
import com.kzw.pojo.TbStore;
import com.kzw.pojo.TbUser;
import com.kzw.portal.service.StoreService;
import com.kzw.portal.service.UserService;

@Controller
@RequestMapping("/store")
public class StoreController {

	@Resource
	private UserService userService;
	@Resource
	private StoreService storeService;
	
	@RequestMapping("/checkStore")
	@ResponseBody
	public KZWResult checkStore(String token, Model model) {
		
		TbUser user = userService.selectUserByToken(token);
		if(user == null) {
			KZWResult.build(400, "用户信息不存在...");
		}
		// 查询店铺信息
		return storeService.selectByUserId(user.getId());
	}
	
	/**
	 * 店铺注册
	 * @return
	 */
	@RequestMapping("/register")
	public String register() {
		
		return "storeRegister";
	}
	
	/**
	 * 保存店铺
	 * @param store
	 * @return
	 */
	@RequestMapping("/saveRegister")
	@ResponseBody
	public KZWResult saveRegister(TbStore store, HttpServletRequest request) {
		
		String userJson = RedisUtil.getUser(request);
		KZWResult format = KZWResult.format(userJson);
		if(format.getStatus() != 200) {
			return null;
		}
		// 取用户信息
		format = KZWResult.formatToPojo(userJson, TbUser.class);
		TbUser user = (TbUser) format.getData();
		store.setUserId(user.getId());
		KZWResult result = storeService.saveRegisterStore(store);
		
		return result;
	}
	
	/*@RequestMapping("/item/{itemId}")
	public String storeItem(@PathVariable Long itemId) {
		
	}*/
	
}
